#!/bin/sh
set -eu

LOG_DIR=/var/log/copyos
mkdir -p "$LOG_DIR"

if ! command -v dialog >/dev/null 2>&1; then
  echo "dialog nicht verfügbar. Starte Fallback-Shell." >&2
  exec /bin/sh
fi

list_devices() {
  lsblk -nrpo NAME,SIZE,TYPE,MOUNTPOINT,LABEL,MODEL -P | while read -r line; do
    eval "$line"
    case "$TYPE" in
      disk|part)
        desc="$SIZE $TYPE"
        [ -n "${LABEL:-}" ] && desc="$desc label=$LABEL"
        if [ -n "${MOUNTPOINT:-}" ]; then
          desc="$desc mount=$MOUNTPOINT"
        else
          desc="$desc (nicht eingehängt)"
        fi
        [ -n "${MODEL:-}" ] && desc="$desc model=$MODEL"
        printf '%s\n' "$NAME" "$desc"
        ;;
    esac
  done
}

mountpoint_for() {
  lsblk -nrpo NAME,MOUNTPOINT -P | while read -r line; do
    eval "$line"
    if [ "$NAME" = "$1" ] && [ -n "${MOUNTPOINT:-}" ]; then
      printf '%s' "$MOUNTPOINT"
      return 0
    fi
  done
  return 1
}

select_device() {
  title="$1"
  shift
  set --
  while read -r name && read -r desc; do
    set -- "$@" "$name" "$desc"
  done <<DEVICES
$(list_devices)
DEVICES
  if [ $# -eq 0 ]; then
    dialog --msgbox "Keine Datenträger gefunden." 8 60
    exit 1
  fi
  dialog --stdout --title "$title" --menu "Bitte wählen" 20 70 12 "$@"
}

ask_path() {
  prompt="$1"
  default_value="$2"
  dialog --stdout --title "Pfad eingeben" --inputbox "$prompt" 9 70 "$default_value"
}

while true; do
  SOURCE_DEV=$(select_device "Quelle wählen")
  SOURCE_MP=$(mountpoint_for "$SOURCE_DEV" || true)
  SOURCE_PATH=$(ask_path "Quelldateipfad (z. B. /mnt/source/Dokumente)" "${SOURCE_MP:-/mnt/source}")
  [ -n "$SOURCE_PATH" ] || continue

  TARGET_DEV=$(select_device "Ziel wählen")
  TARGET_MP=$(mountpoint_for "$TARGET_DEV" || true)
  TARGET_PATH=$(ask_path "Zielordner (wird erstellt, falls nicht vorhanden)" "${TARGET_MP:-/mnt/backup}")
  [ -n "$TARGET_PATH" ] || continue

  SUMMARY="Quelle: $SOURCE_PATH\nZiel:   $TARGET_PATH\n\nSicherung jetzt starten?"
  if ! dialog --title "Zusammenfassung" --yesno "$SUMMARY" 12 70; then
    if dialog --yesno "Zurück zur Auswahl?" 8 60; then
      continue
    fi
    clear
    exit 0
  fi

  mkdir -p "$TARGET_PATH"
  TIMESTAMP=$(date +%Y%m%d-%H%M%S)
  LOG_FILE="$LOG_DIR/sicherung-$TIMESTAMP.log"
  dialog --clear
  clear
  echo "Starte Sicherung von $SOURCE_PATH nach $TARGET_PATH"
  echo "Logdatei: $LOG_FILE"
  echo "------------------------------------------------------------"
  if rsync -aHAX --info=progress2 --human-readable "$SOURCE_PATH"/ "$TARGET_PATH"/ | tee "$LOG_FILE"; then
    dialog --title "Sicherung abgeschlossen" --msgbox "Die Sicherung wurde erfolgreich abgeschlossen.\nLogdatei: $LOG_FILE" 10 70
  else
    STATUS=$?
    dialog --title "Fehler" --msgbox "Die Sicherung ist fehlgeschlagen (Status $STATUS).\nDetails: $LOG_FILE" 10 70
  fi

  if ! dialog --yesno "Weitere Sicherung durchführen?" 8 60; then
    clear
    break
  fi
  dialog --clear
  clear
  echo "Starte nächsten Sicherungslauf ..."
  sleep 1
  dialog --clear
  clear
done

exit 0
